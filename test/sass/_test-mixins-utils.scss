@include describe("gap") {
  @include it(
    "Returns both grid-gap and gap set to the default $base-spacing"
  ) {
    @include assert {
      @include output {
        @include gap();
      }

      @include expect {
        grid-gap: 24px;
        gap: 24px; /* stylelint-disable-line order/properties-alphabetical-order */
      }
    }
  }

  @include it("Returns both grid-gap and gap set to the specified width") {
    @include assert {
      @include output {
        @include gap(12px);
      }

      @include expect {
        grid-gap: 12px;
        gap: 12px; /* stylelint-disable-line order/properties-alphabetical-order */
      }
    }
  }
}

@include describe("readable-line-length") {
  @include it("Returns both a rem and ch based max-width") {
    @include assert {
      @include output {
        @include readable-line-length();
      }

      @include expect {
        max-width: 45rem;
        max-width: 85ch;
      }
    }
  }
}

@include describe("reset-list") {
  @include it("Returns the expected reset style rules") {
    @include assert {
      @include output {
        @include reset-list();
      }

      @include expect {
        list-style: none;
        margin: 0;
        padding: 0;
      }
    }
  }
}

@include describe("caret-arrow") {
  @include it("Returns up caret arrow") {
    @include assert {
      @include output {
        @include caret-arrow(#1e7f9d, $direction: up);
      }

      @include expect {
        border: solid #1e7f9d;
        border-width: 0 2px 2px 0;
        content: "";
        display: inline-block;
        height: 6px;
        width: 6px;
        /* stylelint-disable block-closing-brace-newline-after */
        transform: rotate(-135deg);
      }
    }
  }

  @include it("Returns left caret arrow") {
    @include assert {
      @include output {
        @include caret-arrow(#1e7f9d, $direction: left);
      }

      @include expect {
        border: solid #1e7f9d;
        border-width: 0 2px 2px 0;
        content: "";
        display: inline-block;
        height: 6px;
        width: 6px;
        /* stylelint-disable block-closing-brace-newline-after */
        transform: rotate(135deg);
      }
    }
  }

  @include it("Returns down caret arrow") {
    @include assert {
      @include output {
        @include caret-arrow(#1e7f9d, $direction: down);
      }

      @include expect {
        border: solid #1e7f9d;
        border-width: 0 2px 2px 0;
        content: "";
        display: inline-block;
        height: 6px;
        width: 6px;
        /* stylelint-disable block-closing-brace-newline-after */
        transform: rotate(45deg);
      }
    }
  }

  @include it("Returns right caret arrow") {
    @include assert {
      @include output {
        @include caret-arrow(#1e7f9d);
      }

      @include expect {
        border: solid #1e7f9d;
        border-width: 0 2px 2px 0;
        content: "";
        display: inline-block;
        height: 6px;
        width: 6px;
        /* stylelint-disable block-closing-brace-newline-after */
        transform: rotate(-45deg);
      }
    }
  }
}
